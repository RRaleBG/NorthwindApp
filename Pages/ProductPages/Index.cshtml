@page
@model IndexModel

@{
    ViewData["Title"] = "Products";
}

<section class="h-100">


    <div class="py-3 mx-3 mb-5">

        <div class="col justify-content-center text-center">
            <h3 class="fw-bold">Product Charts</h3>
        </div>

        <div class="row h-25">

            <div class="col-sm-8 h-25">
                <canvas id="myChart"></canvas>
            </div>

            <div class="col-sm-4 h-25">
                <canvas id="chart"></canvas>
            </div>
        </div>

    </div>

</section>


<hr />


<section class="h-100">

    <div class="py-3 mx-3 mt-5">

        <div class="col justify-content-center text-center">
            <h3 class="fw-bold">Product table</h3>
        </div>

        <table id="example" class="table widget table-sm table-hover table-striped table-striped ">
            <thead class="w-auto">
                <tr class="text-center text-sm-center align-middle small">
                    <th>  Products </th>                
                    <th>  Supplier                  </th>
                    <th>  Category                  </th>                        
                    <th>  Quantity per unit         </th>
                    <th>  Price                     </th>
                    <th>  Unit in stock             </th>
                    <th>  Units on Order            </th>
                    <th>  Reorder level             </th>
                    <th>  Discontinued              </th>
                    <th > Action </th>         
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Products)
                {
                    <tr class="text-sm-center align-middle small">
                        <td >
                            @Html.DisplayFor(modelItem => item.ProductName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Supplier.CompanyName)
                        </td>
                        <td>                        
                            @Html.DisplayFor(modelItem => item.Category.CategoryName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.QuantityPerUnit)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UnitPrice)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UnitsInStock)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UnitsOnOrder)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ReorderLevel)                    
                        </td>
                        <td>
                            @if(item.Discontinued == true)
                            {
                                <p class="text-success fw-bold">
                                    YES
                                </p>
                            }
                            else
                            {
                                <p class="text-danger fw-bold">
                                    No
                                </p>
                            }
                        </td>
                         <td class="align-self-center">                            
                            <a asp-page="./Details" asp-route-id="@item.ProductID" class="bi-book-fill mx-3 fs-6" style="accent-color: red;"></a>                         
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

</section>


@section Scripts {      
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-autocolors"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-autocolor@0.0.1/src/index.min.js"></script>

    <script type="text/javascript">

        document.addEventListener('DOMContentLoaded', function () {

            const autocolors = window['chartjs-plugin-autocolors'];
            const lighten = (color, value) => Chart.helpers.color(color).lighten(value).rgbString();

            var ctx = document.getElementById('myChart').getContext('2d');

            var chart = new Chart(ctx, {
                type: 'bar',
                data: {                               
                    labels: @Html.Raw(Json.Serialize(Model.Products.Select(p => p.ProductName).ToArray())),
                    datasets: [{
                        label: 'Units in Stock',
                        data: @Html.Raw(Json.Serialize(Model.Products.Select(p => p.UnitsInStock).OrderDescending().ToArray())),
                          barPercentage: 0.5,
                          barThickness: 6,
                          maxBarThickness: 8,
                          minBarLength: 2,
                          borderWidth: 1,
                    }]
                },               
                scales: {
                    y: {
                        beginAtZero: true
                    }                    
                },
                plugins: {
                    autocolors: {
                        enabled: true,
                        mode: 'data'
                    }
                },
            });
 


            var ctx = document.getElementById('chart').getContext('2d');


            var chart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.Products.Select(p => p.Category.CategoryName).Distinct().ToArray())),
                    datasets: [{
                        label: 'Category ID',
                        data: @Html.Raw(Json.Serialize(Model.Products.Select(p => p.Category.CategoryID).Distinct().ToArray())),
                          barPercentage: 0.5,
                          barThickness: 6,
                          maxBarThickness: 8,
                          minBarLength: 2,
                          borderWidth: 1,
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    },
                    plugins: {
                        autocolors: {
                            enabled: true                          
                        }
                    }
                }
            });
        });
    </script>

@*     @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    } *@
}


