@page
@model NorthwindApp.Pages.OrderDetailPages.DetailsModel
@{
    ViewData["Title"] = "Details";
}
<div class="container-sm rounded-3 text-center mt-5 mx-auto shadow-lg py-3" style="max-width:35em;">
    <div class="row">
        @if (TempData["Success"] != null)
        {
            <div class="alert mt-3 alert-success alert-dismissible fade show text-center shadow-lg" role="alert">
                <strong>Success!</strong> Order detail <strong>@Model.OrderViewDetail.Product</strong> Successfully added!
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        <div class="text-start">
            <h3 class="mt-3">@ViewData["Title"]</h3>
        </div>
    </div>
    <div class="row justify-content-center text-center mx-auto">
        <hr />
        <dl class="row justify-content-evenly text-sm-center">
            <dt class="col-sm-6 text-center">
                @Html.DisplayNameFor(model => model.OrderViewDetail.Order)
            </dt>
            <dd class="col-sm-6 text-center">
                @Html.DisplayFor(model => model.OrderViewDetail.OrderID)
            </dd>
            <dt class="col-sm-6">
                @Html.DisplayNameFor(model => model.OrderViewDetail.Product)
            </dt>
            <dd class="col-sm-6">
                @Html.DisplayFor(model => model.OrderViewDetail.Product.ProductName)
            </dd>
            <dt class="col-sm-6">
                @Html.DisplayNameFor(model => model.OrderViewDetail.UnitPrice)
            </dt>
            <dd class="col-sm-6">
                @Html.DisplayFor(model => model.OrderViewDetail.UnitPrice)
            </dd>
            <dt class="col-sm-6">
                @Html.DisplayNameFor(model => model.OrderViewDetail.Quantity)
            </dt>
            <dd class="col-sm-6">
                @Html.DisplayFor(model => model.OrderViewDetail.Quantity)
            </dd>
            <dt class="col-sm-6">
                @Html.DisplayNameFor(model => model.OrderViewDetail.Discount)
            </dt>
            <dd class="col-sm-6">
                @Html.DisplayFor(model => model.OrderViewDetail.Discount)
            </dd>
            <dt class="col-sm-6">
                @Html.DisplayNameFor(model => model.OrderViewDetail.Customer)
            </dt>
            <dd class="col-sm-6">
                @Html.DisplayFor(model => model.OrderViewDetail.Customer.CompanyName)
            </dd>
            <dt class="col-sm-6">
                @Html.DisplayNameFor(model => model.OrderViewDetail.Customer.ContactName)
            </dt>
            <dd class="col-sm-6">
                @Html.DisplayFor(model => model.OrderViewDetail.Customer.ContactName)
            </dd>
            <dt class="col-sm-6">
                @Html.DisplayNameFor(model => model.OrderViewDetail.Product.Category.CategoryName)
            </dt>
            <dd class="col-sm-6">
                @Html.DisplayFor(model => model.OrderViewDetail.Product.Category.CategoryName)
            </dd>
        </dl>
    </div>
    <hr />
    <div class="mx-auto row justify-content-evenly">
        <a asp-page="./Edit" asp-route-id="@Model.OrderViewDetail.OrderID" asp-route-id2="@Model.OrderViewDetail.ProductID" class="btn btn-sm btn-primary float-center col-2 shadow">Edit</a>
        <a asp-page="./Index" class="btn btn-sm btn-success shadow float-start col-2 shadow">Back</a>
        <a asp-page="./Delete" asp-route-id="@Model.OrderViewDetail.OrderID" class="btn btn-sm btn-danger text-white col-2 float-end shadow">Delete</a>
    </div>
</div>


@section Scripts {
   @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}






