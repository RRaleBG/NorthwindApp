@page
@model IndexModel
@using Syncfusion.EJ2

@{
    ViewData["Title"] = "Northwind-App";
}

@{
    var lista = @ViewData["Lista"];
}

@foreach (var item in Model.Lista)
{
    @item
}

 <div class="row mx-auto" style="max-width: 90%;">
    <div style="width: 75%;"> 
        <canvas id="multiline"></canvas> 
    </div>
</div>
 


<div class="row mx-auto" style="max-width: 90%;">


    <div class="row mx-auto">
        <div class="text-center">
            <div class="row">
                <div class="chart-container" style="max-width: 75%;">
                    <canvas id="multiline" class="my-4"></canvas>
                </div>
            </div>
        </div>
    </div>



    <div class="row mx-auto">    
        <div class="text-center">
            <div class="row">
                <div class="chart-container">
                    <canvas id="Sales96" class="my-4"></canvas>
                </div>    
            </div>
        </div>
    </div>


    <div class="row mx-auto">
        <div class="text-center">
            <div class="row">
                <div class="chart-container">
                    <canvas id="Sales97" class="my-4"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="row mx-auto">
        <div class="text-center">
            <div class="row">       
                <div class="chart-container">
                    <canvas id="Sales98" class="my-4"></canvas>
                </div>
            
            </div>
        </div>
    </div>
</div>


 @*    <div class="row mx-auto">
        <div class="text-center">
            <div class="row">
                <div class="col-sm-4" style="position: relative; width:100vw">
                    <div class="bg-transparent border border-0">
                        <canvas id="Sales98" class="my-4"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div> *@






@* <div class="row mx-auto m-5">
    <div class="col-md-12">
        <canvas id="Sales"></canvas>
    </div>
</div> *@

@* <div class="row mx-auto mt-5">
        
    <div class="col-md-12">
        <ejs-chart id="container" width="100%" height="70%" enableAnimation height="100%" palettes="@(new string[]{"#fa2485", "#336699", "#ffde21"})">
            <e-chart-primaryxaxis valueType=Category></e-chart-primaryxaxis>
            <e-series-collection>

            <e-series dataSource="ViewBag.prvi" xName="x" yName="yValue" name="India"
                        type="@Syncfusion.EJ2.Charts.ChartSeriesType.Bar"></e-series>

            <e-series dataSource="ViewBag.prvi" xName="x" yName="yValue1" name="China"
                        type="@Syncfusion.EJ2.Charts.ChartSeriesType.Bar"></e-series>

            </e-series-collection>
        </ejs-chart>
    </div>
</div>



<div class="row mx-auto">

    <div class="col-md-12 ">
        <ejs-chart id="crt" width="100%" height="70%" enableAnimation height="100%" palettes="@(new string[]{"#fa2485", "#336699", "#ffde21"})">
            <e-chart-primaryxaxis valueType=Category></e-chart-primaryxaxis>
            <e-series-collection>


                <e-series dataSource="ViewBag.pieChartData" xName="X" yName="Y" name="India"
                            type="@Syncfusion.EJ2.Charts.ChartSeriesType.Bar"></e-series>

                <e-series dataSource="ViewBag.pieChartData" xName="X" yName="Y" name="China"
                            type="@Syncfusion.EJ2.Charts.ChartSeriesType.Bar"></e-series>

                <e-series dataSource="ViewBag.pieChartData" xName="X" yName="Z" name="Srbija"
                            type="@Syncfusion.EJ2.Charts.ChartSeriesType.Bar"></e-series>


            </e-series-collection>
        </ejs-chart>
    </div>
</div>



<div class="row mx-auto">
    <div class="text-center">
        <div class="row">
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-header">
                        Bar Chart
                    </div>
                    <div class="card-body">
                        <canvas id="bar" class="my-4 h-25"></canvas>
                    </div>
                    <div class="card-footer">
                        Transactions across top-tier banks
                    </div>
                </div>
            </div>

            <div class="col-sm-6">
                <div class="card">
                    <div class="card-header">
                        Pie Chart
                    </div>
                    <div class="card-body">
                        <canvas id="pie" class="my-4 h-25"></canvas>
                    </div>
                    <div class="card-footer">
                        Transactions among top-tier banks ;-)
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

 *@


@section Scripts {


@*     <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.js"></script>
       <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-autocolors"></script>
       <script src="https://cdn.jsdelivr.net/npm/chart.js"></script> *@


    <script type="text/javascript">

        var model = @Html.Raw(Json.Serialize(Model.Lista));
        var ctx = document.getElementById('chart1').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: [
                    @Model.Lista
                ],
                datasets: [ {
                    label:model.value96.CategoryName,
                    data: [
                        model.ProductSales
                    ],
                    borderColor: 'rgba(75, 192, 192, 1)',
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    fill: false
                }, {
                    label: 'Dataset 2',
                    data: [
                        28, 48, 40, 19, 86, 27, 90
                    ],
                    borderColor: 'rgba(153, 102, 255, 1)',
                    backgroundColor: 'rgba(153, 102, 255, 0.2)',
                    fill: false
                } ]
                },
                options: {
                    scales: {
                        x: {
                            display: true,
                            title: {
                                display: true,
                                text: 'Month'
                            }
                        },
                        y:
                        {
                            display: true,
                            title: {
                                display: true,
                                text: 'Value'
                            }
                        }
                    }
               }
         });




        var ctx = document.getElementById('multiline').getContext('2d'); 
        var myChart = new Chart(ctx, { 
            type: 'line', 
            data: { 
                labels: [
                    'January', 'February', 'March', 'April', 'May', 'June', 'July'
                ], 
                datasets: [ { 
                    label: 
                    'Dataset 1', 
                    data: [
                        65, 59, 80, 81, 56, 55, 40
                    ], 
                    borderColor: 'rgba(75, 192, 192, 1)', 
                    backgroundColor: 'rgba(75, 192, 192, 0.2)', 
                    fill: false 
                }, { 
                    label: 'Dataset 2', 
                    data: [
                        28, 48, 40, 19, 86, 27, 90
                    ], 
                    borderColor: 'rgba(153, 102, 255, 1)', 
                    backgroundColor: 'rgba(153, 102, 255, 0.2)', 
                    fill: false 
                } ] 
                }, 
                options: { 
                    scales: { 
                        x: { 
                            display: true, 
                            title: { 
                                display: true, 
                                text: 'Month' 
                            } 
                        }, 
                        y: 
                        { 
                            display: true, 
                            title: { 
                                display: true, 
                                text: 'Value' 
                            } 
                        } 
                    } 
               } 
         });


        //Prouct sales for 1996
         var jsonSales96 = '@Html.Raw(ViewData["Sales96"])';
         var value96 = JSON.parse(jsonSales96);

         var Sales96 = document.getElementById('Sales96').getContext('2d');

         var products = new Chart(Sales96, {
            type: 'bar',
            data: {
                labels: value96.map(x => x.CategoryName),
                datasets: [{
                label: 'Product Sales for 1996',
                        barPercentage: 0.5,
                        // barThickness: 8,
                        // maxBarThickness: 9,
                        minBarLength: 5,
                data: value96.map(x => x.ProductSales),
                backgroundColor: [
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(255, 205, 86, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(201, 203, 207, 0.2)',
                    'rgba(255, 205, 86, 0.2)',
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(201, 203, 207, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(201, 203, 207, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 205, 86, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(255, 205, 86, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(201, 203, 207, 0.2)',
                    'rgba(255, 205, 86, 0.2)',
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(201, 203, 207, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(201, 203, 207, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 205, 86, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(255, 205, 86, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(201, 203, 207, 0.2)',
                    'rgba(255, 205, 86, 0.2)',
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(201, 203, 207, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(201, 203, 207, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 205, 86, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(255, 205, 86, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(201, 203, 207, 0.2)',
                    'rgba(255, 205, 86, 0.2)',
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(201, 203, 207, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(201, 203, 207, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 205, 86, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    ],
                    borderColor: [
                    'rgb(255, 99, 132)',
                    'rgb(255, 159, 64)',
                    'rgb(255, 205, 86)',
                    'rgb(75, 192, 192)',
                    'rgb(54, 162, 235)',
                    'rgb(153, 102, 255)',
                    'rgb(201, 203, 207)',
                    'rgb(255, 99, 132)',
                      'rgb(255, 159, 64)',
                      'rgb(255, 205, 86)',
                      'rgb(75, 192, 192)',
                      'rgb(54, 162, 235)',
                      'rgb(153, 102, 255)',
                      'rgb(201, 203, 207)',
                    'rgb(255, 99, 132)',
                      'rgb(255, 159, 64)',
                      'rgb(255, 205, 86)',
                      'rgb(75, 192, 192)',
                      'rgb(54, 162, 235)',
                      'rgb(153, 102, 255)',
                      'rgb(201, 203, 207)',
                     'rgb(255, 99, 132)',
                      'rgb(255, 159, 64)',
                      'rgb(255, 205, 86)',
                      'rgb(75, 192, 192)',
                      'rgb(54, 162, 235)',
                      'rgb(153, 102, 255)',
                      'rgb(201, 203, 207)',
                    'rgb(255, 99, 132)',
                      'rgb(255, 159, 64)',
                      'rgb(255, 205, 86)',
                      'rgb(75, 192, 192)',
                      'rgb(54, 162, 235)',
                      'rgb(153, 102, 255)',
                      'rgb(201, 203, 207)',
                     'rgb(255, 99, 132)',
                      'rgb(255, 159, 64)',
                      'rgb(255, 205, 86)',
                      'rgb(75, 192, 192)',
                      'rgb(54, 162, 235)',
                      'rgb(153, 102, 255)',
                      'rgb(201, 203, 207)',
                     'rgb(255, 99, 132)',
                      'rgb(255, 159, 64)',
                      'rgb(255, 205, 86)',
                      'rgb(75, 192, 192)',
                      'rgb(54, 162, 235)',
                      'rgb(153, 102, 255)',
                      'rgb(201, 203, 207)',
                      'rgb(255, 99, 132)',
                      'rgb(255, 159, 64)',
                      'rgb(255, 205, 86)',
                      'rgb(75, 192, 192)',
                      'rgb(54, 162, 235)',
                      'rgb(153, 102, 255)',
                      'rgb(201, 203, 207)',
                     'rgb(255, 99, 132)',
                      'rgb(255, 159, 64)',
                      'rgb(255, 205, 86)',
                      'rgb(75, 192, 192)',
                      'rgb(54, 162, 235)',
                      'rgb(153, 102, 255)',
                      'rgb(201, 203, 207)',
                      'rgb(255, 99, 132)',
                      'rgb(255, 159, 64)',
                      'rgb(255, 205, 86)',
                      'rgb(75, 192, 192)',
                      'rgb(54, 162, 235)',
                      'rgb(153, 102, 255)',
                      'rgb(201, 203, 207)',
                      'rgb(255, 99, 132)',
                      'rgb(255, 159, 64)',
                      'rgb(255, 205, 86)',
                      'rgb(75, 192, 192)',
                      'rgb(54, 162, 235)',
                      'rgb(153, 102, 255)',
                      'rgb(201, 203, 207)',
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    autocolors: true,
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                },
            }
        });

        //Product sales for 1997
        var jsonSales97 = '@Html.Raw(ViewData["Sales97"])';
        var values97 = JSON.parse(jsonSales97);
        var Sales97 = document.getElementById('Sales97').getContext('2d');
        var product = new Chart(Sales97, {
            type: 'line',
            data: {
                labels: values97.map(x => x.CategoryName),
                datasets: [{              
                    data: values97.map(x => x.ProductSales),
                    label: 'Product Sales for 1997',
                    backgroundColor: (contex) => {                        
                        const bgColor = [
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(255, 159, 64, 0.2)',
                            'rgba(255, 205, 86, 0.2)',
                            'rgba(153, 102, 255, 0.2)'                            
                        ];
                        console.log(contex);
                    },
                    borderColor: [
                    'rgb(255, 99, 132)',
                    'rgb(255, 159, 64)',
                    'rgb(255, 205, 86)',
                    'rgb(75, 192, 192)',
                    'rgb(54, 162, 235)',
                    'rgb(153, 102, 255)',
                    'rgb(201, 203, 207)',
                    'rgb(255, 99, 132)',
                    'rgb(255, 159, 64)',
                    'rgb(255, 205, 86)',
                    'rgb(75, 192, 192)',
                    'rgb(54, 162, 235)',
                    'rgb(153, 102, 255)',
                    'rgb(201, 203, 207)',
                    'rgb(255, 99, 132)',
                    'rgb(255, 159, 64)',
                    'rgb(255, 205, 86)',
                    'rgb(75, 192, 192)',
                    'rgb(54, 162, 235)',
                    'rgb(153, 102, 255)',
                    'rgb(201, 203, 207)',
                    'rgb(255, 99, 132)',
                    'rgb(255, 159, 64)',
                    'rgb(255, 205, 86)',
                    'rgb(75, 192, 192)',
                    'rgb(54, 162, 235)',
                    'rgb(153, 102, 255)',
                    'rgb(201, 203, 207)',
                    'rgb(255, 99, 132)',
                    'rgb(255, 159, 64)',
                    'rgb(255, 205, 86)',
                    'rgb(75, 192, 192)',
                    'rgb(54, 162, 235)',
                    'rgb(153, 102, 255)',
                    'rgb(201, 203, 207)',
                    'rgb(255, 99, 132)',
                    'rgb(255, 159, 64)',
                    'rgb(255, 205, 86)',
                    'rgb(75, 192, 192)',
                    'rgb(54, 162, 235)',
                    'rgb(153, 102, 255)',
                    'rgb(201, 203, 207)',
                    'rgb(255, 99, 132)',
                      'rgb(255, 159, 64)',
                      'rgb(255, 205, 86)',
                      'rgb(75, 192, 192)',
                      'rgb(54, 162, 235)',
                      'rgb(153, 102, 255)',
                      'rgb(201, 203, 207)',
                      'rgb(255, 99, 132)',
                      'rgb(255, 159, 64)',
                      'rgb(255, 205, 86)',
                      'rgb(75, 192, 192)',
                      'rgb(54, 162, 235)',
                      'rgb(153, 102, 255)',
                      'rgb(201, 203, 207)',
                     'rgb(255, 99, 132)',
                      'rgb(255, 159, 64)',
                      'rgb(255, 205, 86)',
                      'rgb(75, 192, 192)',
                      'rgb(54, 162, 235)',
                      'rgb(153, 102, 255)',
                      'rgb(201, 203, 207)',
                      'rgb(255, 99, 132)',
                      'rgb(255, 159, 64)',
                      'rgb(255, 205, 86)',
                      'rgb(75, 192, 192)',
                      'rgb(54, 162, 235)',
                      'rgb(153, 102, 255)',
                      'rgb(201, 203, 207)',
                      'rgb(255, 99, 132)',
                      'rgb(255, 159, 64)',
                      'rgb(255, 205, 86)',
                      'rgb(75, 192, 192)',
                      'rgb(54, 162, 235)',
                      'rgb(153, 102, 255)',
                      'rgb(201, 203, 207)',
                    ]
                }]
            },
            options: {
                responsive: true,
                autocolors:{
                    enabled: true,
                    repeat: 2,
                    offset: 5
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: false
                        }
                    }]
                },
            }
        });

        //Product sales for 1998
        var jsonSales98 = '@Html.Raw(ViewData["Sales98"])';
        var values98 = JSON.parse(jsonSales98);
        var Sales98 = document.getElementById('Sales98').getContext('2d');
        var product = new Chart(Sales98, {
            type: 'line',
            data: {
                labels: values98.map(x => x.CategoryName),
                datasets: [{
                label: 'Product Sales for 1998',
                    data: values98.map(x => x.ProductSales),
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgba(75, 192, 192,1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                },
            }
        });

 






        // var jsonData = '@Html.Raw(ViewData["allBankData"])';
        // var values = JSON.parse(jsonData);
        // var colours = {
        //     'GTB': 'rgba(255, 99, 132, 0.2)',
        //     'UBA': 'rgba(201, 203, 207, 0.2)',
        //     'ZIB': 'rgba(153, 102, 255, 0.2)',
        //     'FBN': 'rgba(75, 192, 192, 0.2)',
        //     'ACC': 'rgba(50, 200, 100, 0.5)',
        // }

        // var barChartCanvas = document.getElementById('bar').getContext('2d');
        // var barChart = new Chart(barChartCanvas, {
        //     type: 'bar',
        //     data: {
        //         labels: values.map(x => x.Name),
        //         datasets: [{
        //             barThickness: 25,
        //             label: 'Bar Chart',
        //             data: values.map(x => x.TransactionsCount ),
        //             backgroundColor: values.map(x => x.Colour ),
        //             borderColor: [
        //               'rgb(255, 99, 132)',
        //               'rgb(255, 159, 64)',
        //               'rgb(255, 205, 86)',
        //               'rgb(75, 192, 192)',
        //               'rgb(54, 162, 235)',
        //               'rgb(153, 102, 255)',
        //               'rgb(201, 203, 207)'
        //             ],
        //         }]
        //     },
        //     scales: {
        //         yAxes: [{
        //             ticks: {
        //                 beginAtZero: true
        //             },
        //         }]
        //     }            
        // });


        // var pieChartCanvas = document.getElementById('pie').getContext('2d');
        // var pieChart = new Chart(pieChartCanvas, {
        //     type: 'pie',
        //     data: {
        //         labels: values.map(x => x.Name),
        //         datasets: [{
        //             label: 'Pie Chart',
        //             data: values.map(x => x.TransactionsCount ),
        //             backgroundColor: values.map(x => colours[x.Name] ),
        //             borderColor: [
        //                 'rgb(255, 99, 132)',
        //                 'rgb(255, 159, 64)',
        //                 'rgb(255, 205, 86)',
        //                 'rgb(75, 192, 192)',
        //                 'rgb(54, 162, 235)',
        //                 'rgb(153, 102, 255)',
        //                 'rgb(201, 203, 207)'
        //             ],
        //             borderWidth: 1
        //         }]
        //     },
        //     scales: {
        //         yAxes: [{
        //             ticks: {
        //                 beginAtZero: false
        //             }
        //         }]
        //     }            
        // });


    </script>
}