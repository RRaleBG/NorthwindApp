@page
@model NorthwindApp.Pages.CustomersPages.DetailsModel
@{
    ViewData["Title"] = @Model.Customer.CompanyName;
}
<div class="container-sm widget text-center mt-5 mx-auto shadow-lg py-3" style="max-width:30em;">

    <div class="row col-auto">

        @if (TempData["Success"] == null)
        {                
            <div class="alert mt-3 alert-success alert-dismissible fade show text-center shadow-lg" role="alert">
                <strong>@Model.Customer.CompanyName</strong> Successfully added!
                <button type="button" id="liveToastBtn" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }   
        <div class="modal-title">
            <h3 class="mt-3">@ViewData["Title"]</h3>
        </div> 
        <hr />

    </div>

    <div class="row">
        <dl class="row justify-content-evenly mx-auto">
            <dt class="col-lg-4 col-md-5 col-sm-6 text-center text-lg-start text-md-center text-sm-center">
                @Html.DisplayNameFor(model => model.Customer.CompanyName)
            </dt>
            <dd class="col-sm-6 text-center text-sm-start">
                @Html.DisplayFor(model => model.Customer.CompanyName)
            </dd>
            <dt class="col-lg-4 col-md-5 col-sm-6 text-center text-lg-start text-md-center text-sm-center">
                @Html.DisplayNameFor(model => model.Customer.ContactName)
            </dt>
            <dd class="col-sm-6 text-center text-sm-start">
                @Html.DisplayFor(model => model.Customer.ContactName)
            </dd>
            <dt class="col-lg-4 col-md-5 col-sm-6 text-center text-lg-start text-md-center text-sm-center">
                @Html.DisplayNameFor(model => model.Customer.ContactTitle)
            </dt>
            <dd class="col-sm-6 text-center text-sm-start">
                @Html.DisplayFor(model => model.Customer.ContactTitle)
            </dd>
            <dt class="col-lg-4 col-md-5 col-sm-6 text-center text-lg-start text-md-center text-sm-center">
                @Html.DisplayNameFor(model => model.Customer.Address)
            </dt>
            <dd class="col-sm-6 text-center text-sm-start">
                @Html.DisplayFor(model => model.Customer.Address)
            </dd>
            <dt class="col-lg-4 col-md-5 col-sm-6 text-center text-lg-start text-md-center text-sm-center">
                @Html.DisplayNameFor(model => model.Customer.City)
            </dt>
            <dd class="col-sm-6 text-center text-sm-start">
                @Html.DisplayFor(model => model.Customer.City)
            </dd>
            <dt class="col-lg-4 col-md-5 col-sm-6 text-center text-lg-start text-md-center text-sm-center">
                @Html.DisplayNameFor(model => model.Customer.Region)
            </dt>
            <dd class="col-sm-6 text-center text-sm-start">
                @Html.DisplayFor(model => model.Customer.Region)
                @if(Model.Customer.Region == null)
                {
                    <p class="text-center align-middle m-0 p-0 col-sm-6 text-center text-sm-start"> / </p>
                }
            </dd>
            <dt class="col-lg-4 col-md-5 col-sm-6 text-center text-lg-start text-md-center text-sm-center">
                @Html.DisplayNameFor(model => model.Customer.PostalCode)
            </dt>
            <dd class="col-sm-6 text-center text-sm-start">
                @Html.DisplayFor(model => model.Customer.PostalCode)
            </dd>
            <dt class="col-lg-4 col-md-5 col-sm-6 text-center text-lg-start text-md-center text-sm-center">
                @Html.DisplayNameFor(model => model.Customer.Country)
            </dt>
            <dd class="col-sm-6 text-center text-sm-start">
                @Html.DisplayFor(model => model.Customer.Country)
            </dd>
            <dt class="col-lg-4 col-md-5 col-sm-6 text-center text-lg-start text-md-center text-sm-center">
                @Html.DisplayNameFor(model => model.Customer.Phone)
            </dt>
            <dd class="col-sm-6 text-center text-sm-start">
                @Html.DisplayFor(model => model.Customer.Phone)
            </dd>
            <dt class="col-lg-4 col-md-5 col-sm-6 text-center text-lg-start text-md-center text-sm-center">
                @Html.DisplayNameFor(model => model.Customer.Fax)
            </dt>
            <dd class="col-sm-6 text-center text-sm-start">
                @Html.DisplayFor(model => model.Customer.Fax)
                @if (Model.Customer.Fax == null)
                {
                    <p class="text-center align-middle m-0 p-0 col-sm-6 text-center text-sm-start"> /</p>
                }
            </dd>
        </dl>
    </div>
    <hr />
    <div class="mx-auto row justify-content-evenly justify-content-md-evenly  justify-content-lg-evenly">
        <a asp-page="./Index" class="btn btn-sm btn-outline-success shadow float-start rounded-4 col-2">Back</a>
        <a asp-page="./Edit" asp-route-id="@Model.Customer.CustomerID" class="btn btn-sm btn-outline-primary rounded-4 float-center col-2">Edit</a>
        <a asp-page="./Delete" asp-route-id="@Model.Customer.CustomerID" class="btn btn-sm btn-outline-danger rounded-4 col-2 float-end">Delete</a>
    </div>
</div>


@section Scripts {
    @{  
        await Html.RenderPartialAsync("_ValidationScriptsPartial");

        <div class="toast-container position-fixed top-0 end-0 p-3 mb-2 ">
            <div id="liveToast" class="toast bg-danger-subtle text-danger-emphasis" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header ">
                    <img src="~/profile-pic/avatar_11.png" class="rounded me-2 h-25 w-25 rounded-circle" alt="...">
                    <strong class="me-auto">Rados</strong>
                    <small>11 mins ago</small>
                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body">
                    Hello, samo da vas pozdravim! :)
                </div>
            </div>
        </div>
    }

    <script>
        
        const toastTrigger = document.getElementById('liveToastBtn')
        const toastLiveExample = document.getElementById('liveToast')

        if (toastTrigger) {
            const toastBootstrap = bootstrap.Toast.getOrCreateInstance(toastLiveExample)
            toastTrigger.addEventListener('click', () => {
                toastBootstrap.show()
          });
        };


    </script>



}
<style>

    button {
        margin: 25px 5px 20px 20px;
    }

    .e-plus-icon::before {
        content: '\e823';
    }


</style>