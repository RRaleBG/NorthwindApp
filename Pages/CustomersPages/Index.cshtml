@page
@model NorthwindApp.Pages.CustomersPages.IndexModel
@{
    ViewData["Title"] = "Customers";
}
<div class="m-5 mt-0">
    
    <div class="col text-center">
        <h3 class="fw-bold">Customers</h3>
    </div>    


    <!-- Customer's chart -->
    <div class="container mx-auto" style="max-width: 90%;">
        <div class="container">
            <div class="row mx-auto">
                <div class="text-center">
                    <div class="row">                
                        <div class="chart-container">
                            <canvas id="customer" class="my-4"></canvas>
                        </div>              
                    </div>
                </div>
            </div>
        </div>
    </div>



    <!-- Customer's table -->
    <table id="example" class="table table-sm table-hover table-striped table-borderless bg-transparent shadow">
        <thead>
            <tr class="text-center text-white-50 align-middle small border border-0 border-bottom border-dark">
                <th class="align-middle"> Company Name  </th>
                <th> Contact Name  </th>
                <th> Contact title </th>
                <th> Address       </th>
                <th> City          </th>
                <th> Region        </th>
                <th> Postal code   </th>
                <th> Country       </th>
                <th> Phone         </th>
                <th> Fax           </th>
                <th> Order`s       </th>
                <th> Action        </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Customers) 
            {
                <tr class="text-center text-white-50 align-middle small">
                    <td class="text-start text-white-50 "> @Html.DisplayFor(modelItem => item.CompanyName) </td>
                    <td> @Html.DisplayFor(modelItem => item.ContactName)  </td>
                    <td> @Html.DisplayFor(modelItem => item.ContactTitle) </td>
                    <td> @Html.DisplayFor(modelItem => item.Address)      </td>
                    <td> @Html.DisplayFor(modelItem => item.City)         </td>
                    <td class="text-center align-middle">
                        @Html.DisplayFor(modelItem => item.Region)
                        @if (item.Region == null)
                        {
                            <p class="text-center align-middle m-0 p-0">
                                /
                            </p>
                        }                    
                    </td>
                    <td> @Html.DisplayFor(modelItem => item.PostalCode)   </td>
                    <td> @Html.DisplayFor(modelItem => item.Country)      </td>
                    <td> @Html.DisplayFor(modelItem => item.Phone)        </td>
                    <td> @Html.DisplayFor(modelItem => item.Fax)
                        @if (item.Fax == null)
                        {
                            <p class="text-center align-middle m-0 p-0">
                                /
                            </p>
                        }
                    </td class="text-center align-middle">
                    <td> @Html.DisplayFor(modelItem => item.Orders.Count) </td>

                    <td class="align-self-center">
                        <a asp-page="./Details" asp-route-id="@item.CustomerID" class="bi-book fs-6" style="color: red;"></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>




@section Scripts {
    <script type="text/javascript">         
        
        var ctx = document.getElementById('customer').getContext('2d');

        var chart = new Chart(ctx, {
            type: 'bar',                 
            data: {             
                labels: @Html.Raw(Json.Serialize(Model.Customers.Select(a => a.ContactName).ToArray())),                 
                datasets: [{
                    label: "Customer orders ",
                        barPercentage: 1,
                        barThickness: 3,
                        maxBarThickness: 3,
                        minBarLength: 0.3,
                    data: @Html.Raw(Json.Serialize(Model.Customers.Select(a => a.Orders.Count).ToArray())),
                    borderRadius: 3,
                    borderColor: '#36A2EB',
                    backgroundColor: [
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(201, 203, 207, 0.2)',
                        'rgba(255, 205, 86, 0.2)',
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                    ],
                    borderWidth: 1,                   
                }]
            },              
            options: {
                plugins: {
                    animation: {
                        animateScale: true,
                    },
                    autocolors: {
                        enabled: true
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true
                    }                    
                },
            }
        });   

    </script>


  @*   @{
        // await Html.RenderPartialAsync("_ValidationScriptsPartial");
    } *@

}